fit.2 <- lm(price~., houseprice)
step(fit.2, scope = price~., direction = 'forward')
step(fit.2, scope = price~., direction = 'backward')
usedcars
# 6.6
fit.3 <- lm(price~., usedcars)
summaryf(regsubsets(fit.3, nbset = 6))
# 6.6
fit.3 <- regsubsets(price~., usedcars, nbest = 6)
summaryf(fit.3)
step(fit.3, scope = price~., direction = 'both', test = 'F')
fit.4 <- lm(price~., usedcars)
step(fit.4, scope = price~., direction = 'both', test = 'F')
summary(fit.4)
suneung
#6.7
fit.5 <- regsubsets(suneung~., suneung, nbest = 6)
summaryf(fit.5)
fit.6 <- lm(suneung~., suneung)
step(fit.6, scope = suneung~., direction = 'both', test = "F")
#6.8
fit.7 <- lm(sale~., carsale)
step(fit.7, scope = sale~., direction = 'both', test = 'F')
fit.8 <- regsb(sale~., carsale, nbset = 6)
fit.8 <- regsubsets(sale~., carsale, nbset = 6)
fit.8 <- regsubsets(sale~., carsale, nbest = 6)
summaryf(fit.8)
fit.9 <- regsubsets(sale~., carsale[-8,], nbest = 6)
summaryf(fit.9)
KBO1
#6.9
fit.10 <- lm(log(Y)~., KBO1)
summary(fit.10)
#6.9
fit.10 <- lm(log(Y)~X1+X2+X3+X4+X5+X6+X7, KBO1)
summary(fit.10)
fit.11 <- regsubsets(log(Y)~X1+X2+X3+X4+X5+X6+X7, KBO1, nbest = 6)
summaryf(fit.11)
step(fit.10, scope = log(Y)~X1+X2+X3+X4+X5+X6+X7, direction = 'both', test = "F")
fit.12 <- lm(log(Y)~X1+X5+X6+X7, KBO1)
summary(fit.12)
y <- c(2,3,1,3,4,6,3,6)
y-(7/2)
(y-(7/2))^2
sum((y-(7/2))^2)
x1 <- c(-1,1,-1,1,-1,1,-1,1)
x1 * y
sum(x1 * y)
x1 <- c(-1，-1，1，1，-1，-1，1，1)
x1 <- c(-1，-1，1，1，-1，-1，1，1)
x1 <- c(-1,-1,1,1,-1,-1,1,1)
sum(x1 * y)
x1 <- c(-1,-1,-1,-1,1,1,1,1)
sum(x1 * y)
x1 <- c(-1,1,-1,1,-1,1,-1,1)
x2 <- c(-1,-1,1,1,-1,-1,1,1)
x3 <- c(-1,-1,-1,-1,1,1,1,1)
sum(x1*x2)
sum(x1*x3)
sum(x2*x3)
x2*x3
x1*x3
x1*x2
z <- matrix()
cbind(z,y)
z <- matrix(y)
cbind(z,x1,x2,xx3)
cbind(z,x1,x2,x3)
z[,'y']
z <- data.frame(z)
z
z <- cbind(z,x1,x2,x3)
z <- data.frame(z)
z
lm(z~., z)
a <- lm(z~., z)
summary(vif(a))
summary(vif(a))
library(devtools)
library(regbook)
library(MASS)
library(lattice)
library(ellipse)
summary(vif(a))
h.lm <- lm(y~, hald)
h.lm <- lm(y, hald)
h.lm <- lm(~0, hald)
h.lm
h.lm <- lm(y~0, hald)
h.lm
h.lm <- lm(y~1, hald)
h.lm
summary(h.lm)
hald
h.lm <- lm(y~x2+x3+x4, hald)
summary(h.lm)
h.lm <- lm(y~x1+x3+x4, hald)
summary(h.lm)
summary(vif(h.lm))
library(devtools)
library(regbook)
library(MASS)
library(lattice)
library(ellipse)
summary(lm(x1~x2, bodyfat))
R <- cor(bodyfat[2:4])
R
diag(solve(R))
(eig<-eigen(R))
lm(fat~., bodyfat)
summary(vif(lm(fat~., bodyfat)))
infludata
hatvalues(infludata)
hatvalues(lm(y~x,infludata))
library(devtools)
library(regbook)
library(MASS)
library(lattice)
library(ellipse)
pairs(suneung)
s.lm <- lm(suneung~., suneung)
summary(s.lm)
anova(s.lm)
press(regsubsets(suneung~., suneung))
press(regsubsets(s.lm))
press(regsubsets(s.lm, suneung))
press(regsubsets(s.lm, suneung))
press(regsubsets(suneung~., suneung, nbest=6))
press(regsubsets(suneung~., suneung, nbest=6))
press(regsubsets(suneung~kor+math+sci+eng, suneung, nbest=6))
summaryf(regsubsets(suneung~., suneung))
press(summaryf(regsubsets(suneung~., suneung)))
press(regsubsets(suneung~., suneung))
r <- regsubsets(suneung~., suneung)
press(r)
rpredict(s.lm)
sum(rpredict(s.lm)^2)
anova(s.lm)
r <- regsubsets(suneung~ ., suneung, nbest = 6)
press(r)
21567 + 16261 + 38293 + 2342 + 3023
1 - (4670.607/81486)
0.1978^2
qt(0.025, 20)
summary(s.lm)
plot(s.lm)
par(mfrow=c(2,2))
plot(s.lm)
boxcox(suneung)
boxcox(suneung)
boxcox(s.lm)
par(mfrow=c(1,1))
boxcox(s.lm)
summaryf(r)
l.lm <- lm(Employed~., longley)
summary(l.lm)
cor(longley[2:7])
cor(longley[1:6])
summary(vif(l.lm))
sqrt(4.6033770958/0.0025520658)
sqrt(4.6033770958/0.0149282587)
a.lm <- lm(Employed~GNP.deflator+Unemployed+Armed.Forces+Population, longley)
summary(a.lm)
summary(vif(a.lm))
sqrt(2.64440180/0.01446543)
summaryf(regsubsets(suneung~., suneung, nbest=6))
summaryf(regsubsets(suneung~., suneung, nbest=6))
cor(longley[1:6])
suneung
b0 <- c(-373, 1, 0, 6, 2)
summary(s.lm)
b1 <- c(-373.1421, 1.3315, 0.2172, 5.8785, 2.3368)
(b0-b1) %*%
suneung[2:5]
(b0-b1) %*%
suneung[c(2,3,4,5)]
(b0-b1) %*%
suneung[,c(2,3,4,5)]
(b0-b1) %*%
suneung[,2:5]
suneung[,2:5]
t(suneung[,2:5]) %*% suneung[,2:5]
library(ggplot2)
library(plyr)
library(reshape2)
library(gapminder)
gapminder
p <- ggplot(data=gapminder, mapping = aes(x = gdpPercap, y=lifeExp))
p + geom_point()
p <- ggplot(data=gapminder, mapping = aes(x = gdpPercap, y=lifeExp)) + theme_bw()
p + geom_point()
p + geom_smooth()
p + geom_smooth() + geom_point()
p + geom_smooth() + geom_point() + scale_x_log10()
p  + geom_point() + geom_smooth() + scale_x_log10()
p  + geom_point() + geom_smooth(method = 'gam') + scale_x_log10(labels = scales::dollar)
p <- ggplot(data=gapminder, mapping = aes(x = gdpPercap, y=lifeExp, color = 'purple')) + theme_bw()
p  + geom_point() + geom_smooth(method = 'loess') + scale_x_log10()
p <- ggplot(data=gapminder, mapping = aes(x = gdpPercap, y=lifeExp)) + theme_bw()
p  + geom_point(color='purple') + geom_smooth(method = 'loess') + scale_x_log10()
p <- ggplot(data=gapminder, mapping = aes(x = gdpPercap, y=lifeExp, color = continent, fill = continent)) + theme_bw()
p  + geom_point() + geom_smooth(method = 'loess') + scale_x_log10()
p <- ggplot(data=gapminder, mapping = aes(x = gdpPercap, y=lifeExp)) + theme_bw()
p  + geom_point(mapping = aes(color=continent)) + geom_smooth(method = 'loess') + scale_x_log10()
p  + geom_point(mapping = aes(color=log(pop))) + geom_smooth(method = 'loess') + scale_x_log10()
p  + geom_point(alpha = 0.3) + geom_smooth(method = 'gam') + scale_x_log10(labels = scales::dollar) +
labs(x = 'GDP Per Capita',
y = 'Life Expectancy in Years',
title = 'Economic Growth and Life Expectancy')
p <- ggplot(data = gapminder, mapping = aes(x = year, y = gdpPercap)) + theme_bw()
p + geom_line()
p + geom_line(aes(group=country))
p + geom_line(aes(group=country)) + facet_wrap(~ continent)
p + geom_line(color = 'gray70', aes(group=country)) +
geom_smooth(size = 1.1, method = 'loess', se = FALSE) +
scale_x_log10(labels = scales::dollar) +
facet_wrap(~ continent, ncol = 5) +
labs(x = 'Year', y = 'GDP per capita', title = 'GDP per capita on Five COntinents')
library(socivz)
library(socviz)
data("gss_sm")
p <- ggplot(data = gss_sm, mapping = aes(x=age, y=childs)) + theme_bw()
p + geom_point(alpha = 0.2) +
geom_smooth() +
facet_grid(sex~race)
p <- ggplot(data= gss_sm, mapping = aes(x = bigregion)) + theme_bw()
p + geom_bar()
p + geom_bar(mapping = aes(y=..prop..))
p + geom_bar(mapping = aes(y=..prop.., group = 1))
p + geom_bar(aes(y=..prop.., group = 1))
p + geom_bar(aes(y=..prop.., group = 1))
p <- ggplot(data= gss_sm,aes(x = bigregion)) + theme_bw()
p + geom_bar(aes(y=..prop.., group = 1))
p + geom_bar() + guides(fill = F)
p + geom_bar(position = 'fill')
p <- ggplot(data= gss_sm,aes(x = bigregion, fill = religion)) + theme_bw()
p + geom_bar(position = 'fill')
p + geom_bar(position = 'dodge', aes(y = ..prop.., group = religion))
p <- ggplot(data = midwest, mapping = aes(x = area)) + theme_bw()
p + geom_histogram()
p + geom_histogram(bins = 10)
oh_wi <- c('OH','WI')
p <- ggplot(data = subset(midwest, subset = state %in% oh_wi)) + theme_bw()
p + geom_histogram(alpha = 0.4, bins = 20)
rlang::last_error()
p <- ggplot(data = subset(midwest, subset = state %in% oh_wi), mapping = aes(x=percollege, fill = state)) + theme_bw()
p + geom_histogram(alpha = 0.4, bins = 20)
p <- ggplot(data = midwest, mapping = aes(x = area)) + theme_bw()
p + geom_density()
p <- ggplot(data = midwest, mapping = aes(x = area, fill = state, color = state)) + theme_bw()
p + geom_density(alpha = 0.3)
p <- ggplot(data = subset(midwest, subset = state %in% oh_wi), mapping = aes(x=area, fill = state, color = state)) + theme_bw()
p + geom_density(alpha = 0.3, mapping = aes(y=..scaled..))
setwd("C:/Users/rltjq/Desktop/2학년 1학기/탐색적데이터분석")
library(plyr)
library(reshape2)
library(ggplot2)
library(gapminder)
library(socviz)
p <- ggplot(data = organdata, mapping = aes(x=country, y=donors)) + theme_bw()
p + geom_boxplot()
p + geom_boxplot() + coord_flip()
p <- ggplot(data = organdata, mapping = aes(x=reorder(country, donors, na.rm = TRUE), y=donors)) + theme_bw()
p+ geom_boxplot()
p+ geom_boxplot() + labs(x=NULL) + coord_flip()
p <- ggplot(data = organdata, mapping = aes(x=reorder(country, donors, na.rm = TRUE), y=donors, fill = world)) + theme_bw()
p+ geom_boxplot() + labs(x=NULL) + coord_flip()
p+ geom_boxplot() + labs(x=NULL) + coord_flip() + theme(legend.position = 'top')
p + geom_jitter(position = position_jitter(width=0.15)) + labs(x=NULL) + coord_flip()+ theme(legend.position = 'top')
p <- ggplot(data = organdata, mapping = aes(x=reorder(country, donors, na.rm = TRUE), y=donors, color = world)) + theme_bw()
p + geom_jitter(position = position_jitter(width=0.15)) + labs(x=NULL) + coord_flip()+ theme(legend.position = 'top')
library(ggpairs)
install.packages("GGally")
library(GGally)
plot_str(movie)
install.packages('DataExplorer')
library(DataExplorer)
plot_str(movie)
data("movie")
plot_str(movie)
plot_str(movie)
plot_missing(movie) + theme_bw()
movie = read.csv('data/movie.csv', stringsAsFactors = FALSE)
plot_str(movie)
plot_missing(movie) + theme_bw()
plot_histogram(move)
plot_histogram(movie)
plot_density(movie, theme_config = 'continuous')
plot_density(movie, theme_config = theme_bw())
20192774_mem <- read.csv(‘data/20192774_mem.csv’, stringAsFactors = FALSE)
20192774_mem <- read.csv('data/20192774_mem.csv', stringAsFactors = FALSE)
mem <- read.csv('data/20192774_mem.csv', stringAsFactors = FALSE)
mem <- read.csv('data/20192774_mem.csv', stringsAsFactors = FALSE)
transaction <- read.csv('data/transaction.csv', stringsAsFactors = FALSE)
mem[:6]
mem[,:6]
mem[6]
mem[:6,]
mem[1:6,]
is.na(mem)
complete.cases(mem)
mem[complete.cases(mem)]
mem[complete.cases(mem),]
str(mem[complete.cases(mem),])
sum(is.na(mem[complete.cases(mem),]))
sum(is.na(mem))
mem <- read.csv('data/20192774_mem.csv', stringsAsFactors = FALSE)
sum(is.na(mem))
sum(is.na(transaction))
summary(mem)
summary(mem['age'])
boxplot(mem)
boxplot(mem['age'])
mem$age[mem$age<box$stats[1,1]] = box$stats[1,1]
mem$age<box$stats[1,1]
mem$age
type(mem$age)
str(mem$age)
mem$age<box$stats[1,1]
box = boxplot(mem$age)
mem$age[mem$age<box$stats[1,1]] = box$stats[1,1]
mem$age[mem$age<box$stats[5,1]] = box$stats[5,1]
summary(mem['age'])
box = boxplot(mem$age)
box
mem$age[mem$age<box$stats[5,1]] = box$stats[5,1]
summary(mem['age'])
mem[1:6,]
mem <- read.csv('data/20192774_mem.csv', stringsAsFactors = FALSE)
mem[1:6,]
box = boxplot(mem$age)
mem$age[mem$age<box$stats[1,1]] = box$stats[1,1]
mem$age[mem$age<box$stats[5,1]] = box$stats[5,1]
summary(mem['age'])
mem <- read.csv('20192774_mem.csv', na.strings=c(''), stringsAsFactors = FALSE)
mem <- read.csv('data/20192774_mem.csv', na.strings=c(''), stringsAsFactors = FALSE)
mem[1:6,]
summary(mem['age'])
sum(is.na(mem))
mem[complete.cases(mem),]
summary(mem)
sum(is.na(mem))
mem = mem[complete.cases(mem),]
summary(mem)
mem <- read.csv('data/20192774_mem.csv', na.strings=c(''), stringsAsFactors = FALSE)
summary(mem)
library(Hmisc)
library(mice)
md.pattern(mem, rotate.names = FALSE)
sum(is.na(mem$reg_method))
mem = mem[complete.cases(mem$reg_method),]
sum(is.na(mem$reg_method))
sum(is.na(mem))
summary(mem)
p <- ggplot(mem, aes=(x = gender)) + theme_bw()
p + geom_bar()
barplot(mem$gender)
mem$gender
boxplot(mem$gender)
ggplot(mem, aes(x=gender)) + geom_bar()
ggplot(mem, aes(x=gender)) + geom_bar(color = 'r')
ggplot(mem, aes(x=gender)) + geom_bar(color = 'red')
ggplot(mem, aes(x=gender, fill = 'sktblue')) + geom_bar()
ggplot(mem, aes(x=gender, fill = 'skyblue')) + geom_bar()
ggplot(mem, aes(x=gender, color = 'skyblue')) + geom_bar()
ggplot(mem, aes(x=gender)) + geom_bar(col = 'blue')
ggplot(mem, aes(x=gender)) + geom_bar()
str(mem)
mem$reg_date = as.character.Date(mem$reg_date)
str(mem)
mem$reg_date = as.character.POSIXt(mem$reg_date)
str(mem)
mem$ex_date = as.character.POSIXt(mem$ex_date)
mem$reg_date - mem$ex_date
mem$reg_date = as.POSIXt(mem$reg_date)
mem$reg_date = as.Date.POSIXct(mem$reg_date)
mem$reg_date = as.character.Date.POSIXct(mem$reg_date)
mem = merge(mem, transaction, all.x = TRUE)
str(mem)
head(mem)
mem = merge(mem, transaction, all.x = TRUE)
head(mem)
transaction <- read.csv('data/transactions.csv', stringsAsFactors = FALSE)
sum(is.na(transaction))
transaction
mem = merge(mem, transaction, all.x = TRUE)
str(mem)
transaction
mem = merge(mem, transaction, all.x = TRUE)
mem <- read.csv('data/20192774_mem.csv', na.strings=c(''), stringsAsFactors = FALSE)
mem = mem[complete.cases(mem$reg_method),]
box = boxplot(mem$age)
mem$age[mem$age<box$stats[1,1]] = box$stats[1,1]
mem$age[mem$age<box$stats[5,1]] = box$stats[5,1]
mem
transaction
mem = merge(mem, transaction, all.x = TRUE)
mem$listen
ddply(mem, .(user_id), transform, function(x) {data.frame(rec_ratio = mean(x$listen))})
ddply(mem, .(user_id), transform, function(x) {data.frame(rec_ratio = mean(x$listen))})
ddply(mem, .(user_id), function(x) {data.frame(rec_ratio = mean(x$listen))})
ddply(mem, .(user_id),transform, function(x) {data.frame(rec_ratio = mean(x$listen))})
ddply(mem, .(user_id), function(x) {data.frame(rec_ratio = mean(x$listen))})
ddply(mem, .(user_id),transform ,function(x) {data.frame(rec_ratio = mean(x$listen))})
ddply(mem, .(user_id),mutate ,function(x) {data.frame(rec_ratio = mean(x$listen))})
ddply(mem, .(user_id),summarise ,function(x) {data.frame(rec_ratio = mean(x$listen))})
ddply(mem, .(user_id) ,function(x) {data.frame(rec_ratio = mean(x$listen))})
mem
length(unique(mem$artist))
ddply(mem, .(user_id), function(x) {data.frame(like_artist = length(unique(x$artist)))})
ddply(mem, .(user_id),transform ,function(x) {data.frame(like_artist = length(unique(x$artist)))})
ddply(mem, .(user_id) , transform,rec_ratio = mean(x$listen))
ddply(mem, .(user_id) , transform,rec_ratio = mean(mem$listen))
ddply(mem, .(user_id) , transform,rec_ratio = mean(listen))
mem
mem = ddply(mem, .(user_id) , transform,rec_ratio = mean(listen))
summary(mem$rec_ratio)
ddply(mem, .(user_id),transform ,like_artist = length(unique(artist)))
mem = ddply(mem, .(user_id),transform ,like_artist = length(unique(artist)))
p <- ggplot(mem, aes(x=like_artist)) + theme_bw()
p + geom_histogram()
p <- ggplot(mem, aes(x=like_artist, fill = 'blue')) + theme_bw()
p + geom_histogram()
p + geom_histogram(color = 'bule')
p + geom_histogram(color = 'blue')
p <- ggplot(mem, aes(x=like_artist)) + theme_bw()
p + geom_histogram(aes(color = 'blue'))
p <- ggplot(mem, aes(x=like_artist)) + theme_bw()
p + geom_histogram()
as.Date(mem$reg_date)
mem$reg_date
str(mem$reg_date)
mem$reg_date = as.character(mem$reg_date)
str(mem$reg_date)
mem$reg_date = as.Date(mem$reg_date)
mem$reg_date = as.Date(mem$reg_date, format='YYYYMMDD')
mem$reg_date
mem <- read.csv('data/20192774_mem.csv', na.strings=c(''), stringsAsFactors = FALSE)
mem = mem[complete.cases(mem$reg_method),]
box = boxplot(mem$age)
mem$age[mem$age<box$stats[1,1]] = box$stats[1,1]
mem$age[mem$age<box$stats[5,1]] = box$stats[5,1]
mem = merge(mem, transaction, all.x = TRUE)
mem = ddply(mem, .(user_id) , transform,rec_ratio = mean(listen))
mem = ddply(mem, .(user_id),transform ,like_artist = length(unique(artist)))
mem$reg_date = as.character(mem$reg_date)
as.Date(mem$reg_date, format='YYYYMMDD')
mem$reg_date = as.Date(mem$reg_date, format='%Y%M%D')
mem$reg_date
mem <- read.csv('data/20192774_mem.csv', na.strings=c(''), stringsAsFactors = FALSE)
mem = mem[complete.cases(mem$reg_method),]
box = boxplot(mem$age)
mem$age[mem$age<box$stats[1,1]] = box$stats[1,1]
mem$age[mem$age<box$stats[5,1]] = box$stats[5,1]
mem = merge(mem, transaction, all.x = TRUE)
mem = ddply(mem, .(user_id) , transform,rec_ratio = mean(listen))
mem = ddply(mem, .(user_id),transform ,like_artist = length(unique(artist)))
mem$reg_date = as.character(mem$reg_date)
as.Date(mem$reg_date, format='%Y%m%d')
mem$reg_date = as.Date(mem$reg_date, format='%Y%m%d')
mem$ex_date = as.character(mem$ex_date)
mem$ex_date = as.Date(mem$ex_date, format='%Y%m%d')
mem$reg_date - mem$ex_date
mem$ex_date - mem$reg_date
mem['mem_duration'] = mem$ex_date - mem$reg_date
mem
p <- ggplot(mem, aes(x = mem_duration)) + theme_bw()
p + geom_density()
p <- ggplot(mem, aes(x = mem_duration, color = 'blue')) + theme_bw()
p + geom_density()
p <- ggplot(mem, aes(x = mem_duration)) + theme_bw()
p + geom_density()
p + geom_boxplot()
p + geom_boxplot() + coord_flip()
boxplot(mem$mem_duration)
p + geom_boxplot()
ggplot(mem, aes(x=gender, color = gender)) + geom_bar()
ggplot(mem, aes(x=gender, color = gender, fill = gender)) + geom_bar()
mem <- read.csv('data/20192774_mem.csv', na.strings=c(''), stringsAsFactors = FALSE)
mem = mem[complete.cases(mem$reg_method),]
box = boxplot(mem$age)
mem$age[mem$age<box$stats[1,1]] = box$stats[1,1]
mem$age[mem$age<box$stats[5,1]] = box$stats[5,1]
ggplot(mem, aes(x=gender, color = gender, fill = gender)) + geom_bar()
mem = merge(mem, transaction, all.x = TRUE)
mem = ddply(mem, .(user_id),transform ,like_artist = length(unique(artist)))
length(unique(mem$artist))
p <- ggplot(mem, aes(x=like_artist)) + theme_bw()
p + geom_histogram()
p <- ggplot(mem, aes(x=like_artist, fill = like_artist)) + theme_bw()
p + geom_histogram()
p <- ggplot(mem, aes(x=like_artist, fill = user_id) + theme_bw()
mem$reg_date = as.character(mem$reg_date)
p <- ggplot(mem, aes(x=like_artist, fill = user_id)) + theme_bw()
p + geom_histogram()
mem = ddply(mem, .(user_id) , transform,rec_ratio = mean(listen))
t.test(mem$gender, mem$rec_ratio, alternative = 'two_sided')
t.test(mem$gender, mem$rec_ratio, alternative = 'two.sided')
t.test(mem$rec_ratio,mem$gender, alternative = 'two.sided')
ggpairs(mem)
ggpairs(mem$gender)
ggpairs(mem)
str(mem)
t.test(rec_ratio~gender,mem, alternative = 'two.sided')
ggpairs(mem)
ggpairs(movie)
ggpairs(mem, aes(x=gender)) + theme_bw()
ggpairs(mem, aes(color = gender)) + theme_bw()
library(GGally)
mem
ggpairs(mem[,-1], aes(color = gender)) + theme_bw()
ggpairs(mem[,c(-1,-2)], aes(color = gender)) + theme_bw()
